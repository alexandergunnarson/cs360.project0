;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, with-resources quantum.core.resources, whenf*n quantum.core.logic, doto->> quantum.core.function, try-times quantum.core.error, condfc quantum.core.logic, f*n quantum.core.function, coll-and quantum.core.logic, try+ quantum.core.error, fn-not quantum.core.logic, defcurried quantum.core.function, ifn quantum.core.logic, defalias quantum.core.ns, whencf*n quantum.core.logic, with-do quantum.core.function, <- quantum.core.function, whenc quantum.core.logic, throw-when quantum.core.error, ifp quantum.core.logic, assertf-> quantum.core.error, fn-or quantum.core.logic, if*n quantum.core.logic, fn-eq? quantum.core.logic, condf*n quantum.core.logic, ns-exclude quantum.core.ns, coll-or quantum.core.logic, assertf->> quantum.core.error, pr-attrs quantum.core.print, fn-and quantum.core.logic, defonce quantum.core.ns, fn-> quantum.core.function, rfn quantum.core.function, throw+ quantum.core.error, source quantum.core.ns, condpc quantum.core.logic, fn= quantum.core.logic, assert quantum.core.error, throw-unless quantum.core.error, whenp quantum.core.logic, whenf quantum.core.logic, eq? quantum.core.logic, with-assert quantum.core.error, defkeyframes garden.def, condf quantum.core.logic, fn->> quantum.core.function}, :excludes #{defonce assert}, :name alexandergunnarson.byu.project0.style, :imports nil, :requires {res quantum.core.resources, clojure.core.rrb-vector clojure.core.rrb-vector, logic quantum.core.logic, sys quantum.system, pr quantum.core.print, log quantum.core.log, cljs.core cljs.core, fn quantum.core.function, color quantum.ui.style.color, quantum.ui.style.fonts quantum.ui.style.fonts, garden.selectors garden.selectors, css-dom quantum.ui.style.css.dom, quantum.core.log quantum.core.log, quantum.core.resources quantum.core.resources, ns quantum.core.ns, quantum.ui.style.color quantum.ui.style.color, quantum.core.logic quantum.core.logic, err quantum.core.error, css quantum.ui.style.css.core, quantum.system quantum.system, garden.stylesheet garden.stylesheet, quantum.core.print quantum.core.print, s garden.selectors, quantum.ui.style.css.core quantum.ui.style.css.core, clojure.walk clojure.walk, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, core cljs.core, quantum.core.function quantum.core.function, quantum.ui.style.css.dom quantum.ui.style.css.dom, garden.core garden.core, quantum.core.type.predicates quantum.core.type.predicates}, :uses {AMap quantum.core.ns, postwalk clojure.walk, juxtm quantum.core.function, ! quantum.core.print, juxt-kv quantum.core.function, any? quantum.core.logic, AArrList quantum.core.ns, firsta quantum.core.function, *fn quantum.core.function, Err quantum.core.error, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, family quantum.ui.style.fonts, with-pr->> quantum.core.function, nnil? quantum.core.logic, ALSeq quantum.core.ns, color quantum.ui.style.color, ARegex quantum.core.ns, map-entry? quantum.core.type.predicates, with->> quantum.core.function, call quantum.core.function, AExactNum quantum.core.ns, AEditable quantum.core.ns, zeroid quantum.core.function, AKey quantum.core.ns, splice-or quantum.core.logic, css garden.core, !* quantum.core.print, with-msg->> quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, fn-nil quantum.core.function, ADouble quantum.core.ns, withfs quantum.core.function, theme quantum.ui.style.css.core, AVec quantum.core.ns, at-keyframes garden.stylesheet, ->ex quantum.core.error, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, monoid quantum.core.function, ATransient quantum.core.ns, withf quantum.core.function, nempty? quantum.core.logic, ANum quantum.core.ns, ANil quantum.core.ns, unary quantum.core.function, withf->> quantum.core.function, with-cleanup quantum.core.resources}, :defs {trans {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/project0/style.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([id & props])), :doc "Defines a transition.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(id props)], :arglists ([id & props]), :arglists-meta (nil)}}, :name alexandergunnarson.byu.project0.style/trans, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/project0/style.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(id props)], :arglists ([id & props]), :arglists-meta (nil)}, :method-params [(id props)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists ([id & props]), :doc "Defines a transition."}, style {:name alexandergunnarson.byu.project0.style/style, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/project0/style.cljs", :line 37, :column 1, :end-line 37, :end-column 11, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/project0/style.cljs", :line 37, :column 6, :end-line 37, :end-column 11}}}, :require-macros {res quantum.core.resources, logic quantum.core.logic, pr quantum.core.print, log quantum.core.log, fn quantum.core.function, garden.selectors garden.selectors, quantum.core.log quantum.core.log, quantum.core.resources quantum.core.resources, ns quantum.core.ns, quantum.core.logic quantum.core.logic, err quantum.core.error, quantum.core.print quantum.core.print, s garden.selectors, garden.def garden.def, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, quantum.core.function quantum.core.function}, :cljs.analyzer/constants {:seen #{:#root :thead :del :fieldset :baseline :q :figure :aside :video :address :caption :align-items :align :inherit :r :transparent :dd :box-shadow :space-around :text-transform :tbody :#weather :table :ul :color :h1.name :text-align :vertical-align :pre :montserrat :white :sup :color-out :size-out :font-size :transition :dfn :sub :font-weight :#top-bar :mark :strong :td :li :dt :fill :div#current-weather :section :uppercase :th :time :iframe :tr :margin-top :transition-name :width :article :background :legend :em :kbd :div.cutout :abbr :flex :ins :footer :div.weather-item :header :tfoot :h5 :font :size :div.weather-item:hover :column :div#forecast :center :small :div :font-smoothing :samp :h4 :div#resume :div#weather-bar :helvetica-neue :h2.resume :.p5 :ol :div#status-span :padding-top :var :from :h6 :circle#sun :border-spacing :cx :label :#div-root :red :cy :padding :size-in :antialiased :justify-content :code :outline :b :div.caption1 :display :div:hover :h2 :hgroup :letter-spacing :p#footer :form :audio :light-blue :padding-bottom :a:visited :circle#sun1 :h1 :color-in :border :h3 :body :lato :div.weather-item.selected :border-radius :a:link :stretch :-webkit-transition :cite :transition-duration :img.cutout :p :nav :margin-bottom :object :i :sky :menu :blockquote :img :circle#sun2 :font-family :flex-direction :div#status :height :dl :row :html :span :to :margin}, :order [:sky :light-blue :red :from :-webkit-transition :transition :width :height :to :html :body :span :object :iframe :h1 :h2 :h3 :h4 :h5 :h6 :p :blockquote :pre :abbr :address :cite :code :del :dfn :em :img :ins :kbd :q :samp :small :strong :sub :sup :var :b :i :dl :dt :dd :ol :ul :li :fieldset :form :label :legend :table :caption :tbody :tfoot :thead :tr :th :td :article :aside :figure :footer :header :hgroup :menu :nav :section :time :mark :audio :video :margin :padding :border :outline :font-size :vertical-align :background :baseline :transparent :font :color :font-smoothing :helvetica-neue :white :antialiased :h1.name :align :margin-top :margin-bottom :center :h2.resume :#root :display :flex-direction :justify-content :align-items :font-family :flex :column :montserrat :#div-root :stretch :#weather :div :inherit :div#current-weather :div#forecast :border-spacing :div#weather-bar :row :div.weather-item :transition-name :transition-duration :padding-top :padding-bottom :text-align :color-out :div.weather-item.selected :div.weather-item:hover :color-in :img.cutout :border-radius :div.cutout :box-shadow :div#resume :div.caption1 :text-transform :uppercase :lato :div#status-span :.p5 :letter-spacing :a:link :a:visited :p#footer :#top-bar :space-around :size-out :div:hover :size-in :circle#sun :cx :cy :r :fill :circle#sun1 :circle#sun2 :div#status :font-weight :size]}, :doc nil}