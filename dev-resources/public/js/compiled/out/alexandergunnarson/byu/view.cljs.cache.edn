;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, reaction reagent.ratom, with-resources quantum.core.resources, whenf*n quantum.core.logic, doto->> quantum.core.function, try-times quantum.core.error, condfc quantum.core.logic, f*n quantum.core.function, coll-and quantum.core.logic, try+ quantum.core.error, fn-not quantum.core.logic, defcurried quantum.core.function, ifn quantum.core.logic, defalias quantum.core.ns, whencf*n quantum.core.logic, with-do quantum.core.function, <- quantum.core.function, whenc quantum.core.logic, throw-when quantum.core.error, ifp quantum.core.logic, assertf-> quantum.core.error, fn-or quantum.core.logic, if*n quantum.core.logic, fn-eq? quantum.core.logic, condf*n quantum.core.logic, ns-exclude quantum.core.ns, coll-or quantum.core.logic, assertf->> quantum.core.error, pr-attrs quantum.core.print, fn-and quantum.core.logic, defonce quantum.core.ns, fn-> quantum.core.function, rfn quantum.core.function, throw+ quantum.core.error, source quantum.core.ns, condpc quantum.core.logic, fn= quantum.core.logic, assert quantum.core.error, throw-unless quantum.core.error, whenp quantum.core.logic, whenf quantum.core.logic, eq? quantum.core.logic, with-assert quantum.core.error, condf quantum.core.logic, fn->> quantum.core.function}, :excludes #{defonce assert}, :name alexandergunnarson.byu.view, :imports nil, :requires {res quantum.core.resources, clojure.core.rrb-vector clojure.core.rrb-vector, logic quantum.core.logic, sys quantum.system, pr quantum.core.print, log quantum.core.log, conn quantum.net.websocket, fonts quantum.ui.style.fonts, reagent.core reagent.core, rx reagent.core, alexandergunnarson.byu.style alexandergunnarson.byu.style, cljs.core cljs.core, fn quantum.core.function, quantum.ui.style.fonts quantum.ui.style.fonts, garden.selectors garden.selectors, css-dom quantum.ui.style.css.dom, quantum.core.log quantum.core.log, quantum.core.resources quantum.core.resources, ns quantum.core.ns, quantum.core.logic quantum.core.logic, err quantum.core.error, css quantum.ui.style.css.core, quantum.system quantum.system, quantum.core.print quantum.core.print, s garden.selectors, quantum.ui.style.css.core quantum.ui.style.css.core, quantum.net.websocket quantum.net.websocket, clojure.walk clojure.walk, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, core cljs.core, quantum.core.function quantum.core.function, quantum.ui.style.css.dom quantum.ui.style.css.dom, garden.core garden.core, quantum.ui.features quantum.ui.features, quantum.core.type.predicates quantum.core.type.predicates}, :uses {AMap quantum.core.ns, postwalk clojure.walk, juxtm quantum.core.function, ! quantum.core.print, juxt-kv quantum.core.function, any? quantum.core.logic, AArrList quantum.core.ns, firsta quantum.core.function, *fn quantum.core.function, Err quantum.core.error, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, with-pr->> quantum.core.function, nnil? quantum.core.logic, ALSeq quantum.core.ns, ARegex quantum.core.ns, map-entry? quantum.core.type.predicates, with->> quantum.core.function, call quantum.core.function, AExactNum quantum.core.ns, browser quantum.ui.features, AEditable quantum.core.ns, zeroid quantum.core.function, AKey quantum.core.ns, splice-or quantum.core.logic, css garden.core, !* quantum.core.print, with-msg->> quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, fn-nil quantum.core.function, ADouble quantum.core.ns, withfs quantum.core.function, style alexandergunnarson.byu.style, AVec quantum.core.ns, ->ex quantum.core.error, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, monoid quantum.core.function, ATransient quantum.core.ns, withf quantum.core.function, nempty? quantum.core.logic, ANum quantum.core.ns, ANil quantum.core.ns, unary quantum.core.function, withf->> quantum.core.function, with-cleanup quantum.core.resources}, :defs {state {:name alexandergunnarson.byu.view/state, :file "src/cljs/alexandergunnarson/byu/view.cljs", :line 18, :column 1, :end-line 18, :end-column 15, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/view.cljs", :line 18, :column 10, :end-line 18, :end-column 15}}, top-bar {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/view.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([]))}, :name alexandergunnarson.byu.view/top-bar, :variadic false, :file "src/cljs/alexandergunnarson/byu/view.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, about {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/view.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([]))}, :name alexandergunnarson.byu.view/about, :variadic false, :file "src/cljs/alexandergunnarson/byu/view.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, weather {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/view.cljs", :line 49, :column 7, :end-line 49, :end-column 14, :arglists (quote ([]))}, :name alexandergunnarson.byu.view/weather, :variadic false, :file "src/cljs/alexandergunnarson/byu/view.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ui-render-fn {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljs/alexandergunnarson/byu/view.cljs", :line 88, :column 7, :end-line 88, :end-column 19, :arglists (quote ([props]))}, :name alexandergunnarson.byu.view/ui-render-fn, :variadic false, :file "src/cljs/alexandergunnarson/byu/view.cljs", :end-column 19, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}}, :require-macros {res quantum.core.resources, logic quantum.core.logic, sys quantum.system, pr quantum.core.print, log quantum.core.log, reagent.ratom reagent.ratom, fn quantum.core.function, garden.selectors garden.selectors, quantum.core.log quantum.core.log, quantum.core.resources quantum.core.resources, ns quantum.core.ns, quantum.core.logic quantum.core.logic, err quantum.core.error, quantum.system quantum.system, quantum.core.print quantum.core.print, s garden.selectors, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, quantum.core.function quantum.core.function}, :cljs.analyzer/constants {:seen #{:div#div-root :a.p5 :table :ul :h1.name :div#weather :div#top-bar :td :li :forecast :div#current-weather :th :tr :width :src :state :div.weather-item :on-click :weather-item :div#forecast :style :div :div#resume :div#weather-bar :h2.resume :div#status-span :circle#sun :class :current :svg :div.caption1 :weather :p#footer :circle#sun1 :img.cutout :i :href :circle#sun2 :a :div#status :height :about}, :order [:state :width :height :weather-item :weather :current :div#top-bar :div :on-click :about :div#resume :h1.name :img.cutout :src :h2.resume :i :ul :li :a :href :div#weather :div#weather-bar :div.weather-item :class :forecast :div#current-weather :div#status :div#status-span :div.caption1 :svg :circle#sun :circle#sun1 :circle#sun2 :p#footer :a.p5 :table :div#forecast :tr :th :td :div#div-root :style]}, :doc nil}