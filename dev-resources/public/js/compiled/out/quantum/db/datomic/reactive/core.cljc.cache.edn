;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, reaction reagent.ratom, wait-until quantum.core.thread.async, go cljs.core.async.macros, defalias quantum.core.ns, go-loop cljs.core.async.macros, ns-exclude quantum.core.ns, defonce quantum.core.ns, source quantum.core.ns}, :excludes #{defonce}, :name quantum.db.datomic.reactive.core, :imports nil, :requires {quantum.core.collections quantum.core.collections, core-async cljs.core.async, clojure.core.rrb-vector clojure.core.rrb-vector, log quantum.core.log, async quantum.core.thread.async, reagent.core reagent.core, rx reagent.core, cljs.core cljs.core, quantum.core.log quantum.core.log, cljs.core.async cljs.core.async, datascript.core datascript.core, db quantum.db.datomic.core, mdb datascript.core, ns quantum.core.ns, com.stuartsierra.component com.stuartsierra.component, coll quantum.core.collections, pgen quantum.db.datomic.reactive.pattern-gen, component com.stuartsierra.component, quantum.core.thread.async quantum.core.thread.async, quantum.db.datomic.reactive.pattern-gen quantum.db.datomic.reactive.pattern-gen, quantum.db.datomic.core quantum.db.datomic.core, quantum.db.datomic.reactive.datom-match quantum.db.datomic.reactive.datom-match, quantum.core.ns quantum.core.ns, core cljs.core}, :uses {AMap quantum.core.ns, take!! quantum.core.thread.async, concur quantum.core.thread.async, <! cljs.core.async, AArrList quantum.core.ns, ABool quantum.core.ns, ATreeMap quantum.core.ns, any-datoms-match? quantum.db.datomic.reactive.datom-match, chan quantum.core.thread.async, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, query-symbol? quantum.db.datomic.reactive.datom-match, >!! quantum.core.thread.async, ASet quantum.core.ns, ALSeq quantum.core.ns, ARegex quantum.core.ns, AExactNum quantum.core.ns, put!! quantum.core.thread.async, AEditable quantum.core.ns, AKey quantum.core.ns, <!! quantum.core.thread.async, AQueue quantum.core.ns, peek!! quantum.core.thread.async, AError quantum.core.ns, ADouble quantum.core.ns, >! cljs.core.async, AVec quantum.core.ns, ADecimal quantum.core.ns, alts! cljs.core.async, Exception quantum.core.ns, datom-match? quantum.db.datomic.reactive.datom-match, empty! quantum.core.thread.async, AInt quantum.core.ns, ATransient quantum.core.ns, alts!! quantum.core.thread.async, ANum quantum.core.ns, ANil quantum.core.ns}, :defs {db-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 130, :column 7, :end-line 130, :end-column 12, :arglists (quote ([conn patterns]))}, :name quantum.db.datomic.reactive.core/db-tx, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 12, :method-params ([conn patterns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn patterns]))}, try-after-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 221, :column 7, :end-line 221, :end-column 19, :arglists (quote ([db-before db-after tx-datom [patterns handler-fn]]))}, :name quantum.db.datomic.reactive.core/try-after-tx, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 19, :method-params ([db-before db-after tx-datom p__47219]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db-before db-after tx-datom [patterns handler-fn]]))}, txn-listener-running? {:name quantum.db.datomic.reactive.core/txn-listener-running?, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :line 31, :column 1, :end-line 36, :end-column 24, :doc "Global variable to ensure that no more than one TransactionListener runs\n                 at any given time.\n\n                 This is because Datomic's transaction report queue is mutable and consumable\n                 and should only be consumed by one thread if data is not to be lost.", :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 36, :column 3, :end-line 36, :end-column 24, :doc "Global variable to ensure that no more than one TransactionListener runs\n                 at any given time.\n\n                 This is because Datomic's transaction report queue is mutable and consumable\n                 and should only be consumed by one thread if data is not to be lost."}}, pull {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 177, :column 7, :end-line 177, :end-column 11, :arglists (quote ([conn pull-pattern entity-id]))}, :name quantum.db.datomic.reactive.core/pull, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 11, :method-params ([conn pull-pattern entity-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn pull-pattern entity-id]))}, listeners {:name quantum.db.datomic.reactive.core/listeners, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :line 27, :column 1, :end-line 27, :end-column 19, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 27, :column 10, :end-line 27, :end-column 19}}, do-transaction! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 108, :column 7, :end-line 108, :end-column 22, :arglists (quote ([conn]))}, :name quantum.db.datomic.reactive.core/do-transaction!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 22, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn]))}, rx-conns {:name quantum.db.datomic.reactive.core/rx-conns, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :line 21, :column 1, :end-line 21, :end-column 14, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 21, :column 6, :end-line 21, :end-column 14}}, before-tx! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 244, :column 7, :end-line 244, :end-column 17, :arglists (quote ([conn patterns handler-fn]))}, :name quantum.db.datomic.reactive.core/before-tx!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 17, :method-params ([conn patterns handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn patterns handler-fn]))}, split-tx-map {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 92, :column 7, :end-line 92, :end-column 19, :arglists (quote ([tx-map]))}, :name quantum.db.datomic.reactive.core/split-tx-map, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 19, :method-params ([tx-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tx-map]))}, update-transactions! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 116, :column 7, :end-line 116, :end-column 27, :arglists (quote ([]))}, :name quantum.db.datomic.reactive.core/update-transactions!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, transactions-buffer {:name quantum.db.datomic.reactive.core/transactions-buffer, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :line 90, :column 1, :end-line 90, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 90, :column 6, :end-line 90, :end-column 25}}, q {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 248, :column 7, :end-line 248, :end-column 8, :arglists (quote ([conn query & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(conn query args)], :arglists ([conn query & args]), :arglists-meta (nil)}}, :name quantum.db.datomic.reactive.core/q, :variadic true, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(conn query args)], :arglists ([conn query & args]), :arglists-meta (nil)}, :method-params [(conn query args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 2, :fn-var true, :arglists ([conn query & args])}, clean-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 98, :column 7, :end-line 98, :end-column 15, :arglists (quote ([tx]))}, :name quantum.db.datomic.reactive.core/clean-tx, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 15, :method-params ([tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tx]))}, after-tx! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 241, :column 7, :end-line 241, :end-column 16, :arglists (quote ([conn patterns handler-fn]))}, :name quantum.db.datomic.reactive.core/after-tx!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 16, :method-params ([conn patterns handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn patterns handler-fn]))}, build-pull {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([db pull-syntax entity vars]))}, :name quantum.db.datomic.reactive.core/build-pull, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 17, :method-params ([db pull-syntax entity vars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db pull-syntax entity vars]))}, transact! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 101, :column 7, :end-line 101, :end-column 16, :arglists (quote ([conn tx]))}, :name quantum.db.datomic.reactive.core/transact!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 16, :method-params ([conn tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn tx]))}, build-query {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([db q args]))}, :name quantum.db.datomic.reactive.core/build-query, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 18, :method-params ([db q args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db q args]))}, q-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 188, :column 7, :end-line 188, :end-column 11, :arglists (quote ([conn patterns query & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(conn patterns query args)], :arglists ([conn patterns query & args]), :arglists-meta (nil)}}, :name quantum.db.datomic.reactive.core/q-tx, :variadic true, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(conn patterns query args)], :arglists ([conn patterns query & args]), :arglists-meta (nil)}, :method-params [(conn patterns query args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 3, :fn-var true, :arglists ([conn patterns query & args])}, try-before-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 225, :column 7, :end-line 225, :end-column 20, :arglists (quote ([conn tx-datom [patterns handler-fn]]))}, :name quantum.db.datomic.reactive.core/try-before-tx, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 20, :method-params ([conn tx-datom p__47222]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn tx-datom [patterns handler-fn]]))}, try-all-before-tx! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 231, :column 7, :end-line 231, :end-column 25, :arglists (quote ([conn txs]))}, :name quantum.db.datomic.reactive.core/try-all-before-tx!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 25, :method-params ([conn txs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn txs]))}, pull-tx {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 153, :column 7, :end-line 153, :end-column 14, :arglists (quote ([conn patterns pull-pattern entity-id]))}, :name quantum.db.datomic.reactive.core/pull-tx, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 14, :method-params ([conn patterns pull-pattern entity-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 4, :fn-var true, :arglists (quote ([conn patterns pull-pattern entity-id]))}, established-reactions {:name quantum.db.datomic.reactive.core/established-reactions, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :line 125, :column 1, :end-line 125, :end-column 27, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 125, :column 6, :end-line 125, :end-column 27}}, react! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/db/datomic/reactive/core.cljc", :line 60, :column 7, :end-line 60, :end-column 13, :arglists (quote ([conn])), :doc "Makes a Datomic or DataScript connection @conn reactive."}, :name quantum.db.datomic.reactive.core/react!, :variadic false, :file "src/cljc/quantum/db/datomic/reactive/core.cljc", :end-column 13, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn])), :doc "Makes a Datomic or DataScript connection @conn reactive."}}, :require-macros {reagent.ratom reagent.ratom, log quantum.core.log, quantum.core.log quantum.core.log, async quantum.core.thread.async, quantum.core.thread.async quantum.core.thread.async, ns quantum.core.ns, quantum.core.ns quantum.core.ns, asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:db-after :after-tx :last-tx-report :history :before-tx :q-tx :db-before :tx-data :pull-tx :db/id :db/add :db-tx :span :conn}, :order [:last-tx-report :conn :after-tx :before-tx :history :db-before :db-after :tx-data :db/id :db/add :span :db-tx :pull-tx :q-tx]}, :doc "Reactive Datomic/DataScript functions.\n            Mostly taken from mpdairy/posh (distributed under EPL >= 1)\n            and ported to CLJC."}