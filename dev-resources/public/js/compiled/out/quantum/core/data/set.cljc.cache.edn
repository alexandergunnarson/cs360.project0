;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, defalias quantum.core.ns, ns-exclude quantum.core.ns, defonce quantum.core.ns, source quantum.core.ns}, :excludes #{defonce}, :name quantum.core.data.set, :imports nil, :requires {set clojure.set, clojure.set clojure.set, avl clojure.data.avl, clojure.data.avl clojure.data.avl, clojure.core.rrb-vector clojure.core.rrb-vector, ns quantum.core.ns, quantum.core.ns quantum.core.ns, core cljs.core, cljs.core cljs.core}, :uses {AMap quantum.core.ns, AArrList quantum.core.ns, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, ALSeq quantum.core.ns, ARegex quantum.core.ns, AExactNum quantum.core.ns, AEditable quantum.core.ns, AKey quantum.core.ns, AQueue quantum.core.ns, AError quantum.core.ns, ADouble quantum.core.ns, AVec quantum.core.ns, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, ATransient quantum.core.ns, ANum quantum.core.ns, ANil quantum.core.ns}, :defs {sorted-set+ {:name quantum.core.data.set/sorted-set+, :file "src/cljc/quantum/core/data/set.cljc", :line 18, :column 1, :end-line 18, :end-column 17, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 18, :column 6, :end-line 18, :end-column 17}}, union {:name quantum.core.data.set/union, :file "src/cljc/quantum/core/data/set.cljc", :line 64, :column 10, :end-line 64, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 64, :column 20, :end-line 64, :end-column 25}}, proper-superset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 45, :column 6, :end-line 45, :end-column 22}, :name quantum.core.data.set/proper-superset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 22, :method-params ([p1__37138# p2__37139#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists nil}, intersection {:name quantum.core.data.set/intersection, :file "src/cljc/quantum/core/data/set.cljc", :line 82, :column 1, :end-line 82, :end-column 23, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 82, :column 11, :end-line 82, :end-column 23}}, superset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 43, :column 6, :end-line 43, :end-column 15}, :name quantum.core.data.set/superset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 15, :method-params ([p1__37134# p2__37135#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists nil}, subset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 42, :column 6, :end-line 42, :end-column 13}, :name quantum.core.data.set/subset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 13, :method-params ([p1__37132# p2__37133#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists nil}, proper-subset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 44, :column 6, :end-line 44, :end-column 20}, :name quantum.core.data.set/proper-subset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 20, :method-params ([p1__37136# p2__37137#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists nil}, sorted-set-by+ {:name quantum.core.data.set/sorted-set-by+, :file "src/cljc/quantum/core/data/set.cljc", :line 19, :column 1, :end-line 19, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 19, :column 6, :end-line 19, :end-column 20}}, xset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([fn-key set1 set2])), :attribution "Alex Gunnarson", :todo ["A cool idea... but improve performance"]}, :name quantum.core.data.set/xset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 12, :method-params ([fn-key set1 set2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :attribution "Alex Gunnarson", :todo ["A cool idea... but improve performance"], :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fn-key set1 set2]))}, difference {:name quantum.core.data.set/difference, :file "src/cljc/quantum/core/data/set.cljc", :line 83, :column 1, :end-line 83, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/data/set.cljc", :line 83, :column 11, :end-line 83, :end-column 21}}}, :require-macros {ns quantum.core.ns, quantum.core.ns quantum.core.ns}, :cljs.analyzer/constants {:seen #{& clojure.set/intersection s1 union quantum.core.data.set/intersection :fn sets :eq s2 :sub :ns :name intersection :variadic :file :super :end-column :top-fn :method-params :proper-super :arglists-meta :column clojure.set :line clojure.set/difference :macro quantum.core.data.set :proper-sub :attribution :end-line quantum.core.data.set/union :max-fixed-arity clojure.set/union :arglists difference :doc quantum.core.data.set/difference :test}, :order [:eq :fn :sub :super :proper-sub :proper-super clojure.set/union :ns :name :file :end-column :top-fn :column :line :end-line :arglists :doc :test clojure.set union :variadic :max-fixed-arity :method-params :arglists-meta s1 s2 & sets :macro quantum.core.data.set/union quantum.core.data.set :attribution clojure.set/intersection intersection quantum.core.data.set/intersection clojure.set/difference difference quantum.core.data.set/difference]}, :doc "Useful set-related functions. Includes a dispatch function, |xset?|, \n          from which |subset|, |superset|, |proper-subset?|, and so on may be called."}