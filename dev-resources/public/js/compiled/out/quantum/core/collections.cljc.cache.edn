;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, doto->> quantum.core.function, f*n quantum.core.function, defcurried quantum.core.function, defalias quantum.core.ns, with-do quantum.core.function, <- quantum.core.function, ns-exclude quantum.core.ns, defonce quantum.core.ns, fn-> quantum.core.function, rfn quantum.core.function, source quantum.core.ns, fn->> quantum.core.function}, :excludes #{defonce}, :name quantum.core.collections, :imports nil, :requires {core cljs.core, cljs.core cljs.core, set quantum.core.data.set, quantum.core.data.set quantum.core.data.set, fn quantum.core.function, quantum.core.function quantum.core.function, ns quantum.core.ns, quantum.core.ns quantum.core.ns, clojure.core.rrb-vector clojure.core.rrb-vector}, :uses {AMap quantum.core.ns, sorted-set+ quantum.core.data.set, juxtm quantum.core.function, juxt-kv quantum.core.function, AArrList quantum.core.ns, firsta quantum.core.function, *fn quantum.core.function, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, with-pr->> quantum.core.function, ALSeq quantum.core.ns, ARegex quantum.core.ns, with->> quantum.core.function, call quantum.core.function, AExactNum quantum.core.ns, AEditable quantum.core.ns, zeroid quantum.core.function, AKey quantum.core.ns, with-msg->> quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, fn-nil quantum.core.function, ADouble quantum.core.ns, withfs quantum.core.function, AVec quantum.core.ns, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, monoid quantum.core.function, ATransient quantum.core.ns, withf quantum.core.function, ANum quantum.core.ns, ANil quantum.core.ns, unary quantum.core.function, withf->> quantum.core.function}, :defs {deep-list? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([x])), :from "mpdairy/posh.core"}, :name quantum.core.collections/deep-list?, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :from "mpdairy/posh.core", :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, deep-map {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 65, :column 7, :end-line 65, :end-column 15, :arglists (quote ([f x]))}, :name quantum.core.collections/deep-map, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 15, :method-params ([f x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f x]))}, take-until {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([stop-at? ls])), :from "mpdairy/posh.q-pattern-gen"}, :name quantum.core.collections/take-until, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 17, :method-params ([stop-at? ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :from "mpdairy/posh.q-pattern-gen", :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([stop-at? ls]))}, deep-find {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 55, :column 7, :end-line 55, :end-column 16, :arglists (quote ([f x])), :from "mpdairy/posh.core"}, :name quantum.core.collections/deep-find, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 16, :method-params ([f x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :from "mpdairy/posh.core", :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f x]))}, wrap-delay {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 73, :column 7, :end-line 73, :end-column 17, :arglists (quote ([f]))}, :name quantum.core.collections/wrap-delay, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 17, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, trim-head {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([xs n])), :from "tonsky/datascript-todo.util"}, :name quantum.core.collections/trim-head, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 16, :method-params ([xs n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :from "tonsky/datascript-todo.util", :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs n]))}, rest-at {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 32, :column 7, :end-line 32, :end-column 14, :arglists (quote ([rest-at? ls])), :from "mpdairy/posh.q-pattern-gen"}, :name quantum.core.collections/rest-at, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 14, :method-params ([rest-at? ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :from "mpdairy/posh.q-pattern-gen", :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rest-at? ls]))}, split-list-at {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([split-at? ls])), :from "mpdairy/posh.q-pattern-gen"}, :name quantum.core.collections/split-list-at, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 20, :method-params ([split-at? ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :from "mpdairy/posh.q-pattern-gen", :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([split-at? ls]))}, merge-with-set {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 76, :column 7, :end-line 76, :end-column 21, :arglists (quote ([m1 m2]))}, :name quantum.core.collections/merge-with-set, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 21, :method-params ([m1 m2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m1 m2]))}, drop-tail {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/collections.cljc", :line 4, :column 7, :end-line 4, :end-column 16, :arglists (quote ([xs pred])), :from "tonsky/datascript-todo.util", :todo ["It doesn't seem like this actually does anything"]}, :name quantum.core.collections/drop-tail, :variadic false, :file "src/cljc/quantum/core/collections.cljc", :end-column 16, :method-params ([xs pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :from "tonsky/datascript-todo.util", :todo ["It doesn't seem like this actually does anything"], :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs pred]))}}, :require-macros {fn quantum.core.function, quantum.core.function quantum.core.function, ns quantum.core.ns, quantum.core.ns quantum.core.ns}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}