;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, f*n quantum.core.function, defalias quantum.core.ns, ns-exclude quantum.core.ns, defonce quantum.core.ns, source quantum.core.ns}, :excludes #{defonce merge sorted-map-by sorted-map}, :name quantum.core.function, :imports nil, :requires {clojure.walk clojure.walk, clojure.core.rrb-vector clojure.core.rrb-vector, map quantum.core.data.map, quantum.core.data.map quantum.core.data.map, ns quantum.core.ns, quantum.core.ns quantum.core.ns, core cljs.core, cljs.core cljs.core}, :uses {AMap quantum.core.ns, AArrList quantum.core.ns, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, ALSeq quantum.core.ns, ARegex quantum.core.ns, AExactNum quantum.core.ns, AEditable quantum.core.ns, AKey quantum.core.ns, AQueue quantum.core.ns, AError quantum.core.ns, ADouble quantum.core.ns, AVec quantum.core.ns, ADecimal quantum.core.ns, Exception quantum.core.ns, ordered-map quantum.core.data.map, AInt quantum.core.ns, ATransient quantum.core.ns, ANum quantum.core.ns, ANil quantum.core.ns, map-entry quantum.core.data.map}, :defs {call-> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 143, :column 7, :end-line 143, :end-column 13, :arglists (quote ([arg & [func & args]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(arg [func & args])], :arglists ([arg & [func & args]]), :arglists-meta (nil)}}, :name quantum.core.function/call->, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(arg [func & args])], :arglists ([arg & [func & args]]), :arglists-meta (nil)}, :method-params [(arg [func & args])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists ([arg & [func & args]])}, juxtk {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 200, :column 7, :end-line 200, :end-column 12, :arglists (quote ([& args])), :doc "Like /juxtm/, but each key is constant.\n   Basically like /select-keys/.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name quantum.core.function/juxtk, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "Like /juxtm/, but each key is constant.\n   Basically like /select-keys/."}, juxtm {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 189, :column 7, :end-line 189, :end-column 12, :arglists (quote ([& args])), :doc "Like /juxt/, but applies a hash-map instead of a vector.\n   Requires an even number of arguments.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name quantum.core.function/juxtm, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "Like /juxt/, but applies a hash-map instead of a vector.\n   Requires an even number of arguments."}, juxtk* {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 177, :column 7, :end-line 177, :end-column 13, :arglists (quote ([map-type args]))}, :name quantum.core.function/juxtk*, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :method-params ([map-type args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([map-type args]))}, juxt-kv {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 206, :column 7, :end-line 206, :end-column 14, :arglists (quote ([kf vf]))}, :name quantum.core.function/juxt-kv, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :method-params ([kf vf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([kf vf]))}, firsta {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 31, :column 7, :end-line 31, :end-column 13, :arglists (quote ([x] [x y] [x y z] [x y z & more])), :doc "Accepts any number of arguments and returns the first.", :attribution "parkour.reducers", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([x] [x y] [x y z]), :arglists ([x] [x y] [x y z] [x y z & more]), :arglists-meta (nil nil nil nil)}}, :name quantum.core.function/firsta, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([x] [x y] [x y z]), :arglists ([x] [x y] [x y z] [x y z & more]), :arglists-meta (nil nil nil nil)}, :method-params ([x] [x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 31, :attribution "parkour.reducers", :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists ([x] [x y] [x y z] [x y z & more]), :doc "Accepts any number of arguments and returns the first."}, *fn {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 111, :column 7, :end-line 111, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name quantum.core.function/*fn, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, juxt-sm {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 194, :column 7, :end-line 194, :end-column 14, :arglists (quote ([& args])), :doc "Like /juxt/, but applies a sorted-map+ instead of a vector.\n   Requires an even number of arguments.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name quantum.core.function/juxt-sm, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "Like /juxt/, but applies a sorted-map+ instead of a vector.\n   Requires an even number of arguments."}, fn-bi {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 113, :column 7, :end-line 113, :end-column 12, :arglists (quote ([arg]))}, :name quantum.core.function/fn-bi, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}, seconda {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 39, :column 7, :end-line 39, :end-column 14, :arglists (quote ([x y] [x y z] [x y z & more])), :doc "Accepts any number of arguments and returns the second.", :attribution "parkour.reducers", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z] [x y z & more]), :arglists-meta (nil nil nil)}}, :name quantum.core.function/seconda, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z] [x y z & more]), :arglists-meta (nil nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 39, :attribution "parkour.reducers", :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z] [x y z & more]), :doc "Accepts any number of arguments and returns the second."}, do-rfn {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 235, :column 8, :end-line 235, :end-column 14, :private true, :arglists (quote ([f1 k fkv])), :attribution "clojure.core.reducers"}, :private true, :name quantum.core.function/do-rfn, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :method-params ([f1 k fkv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :attribution "clojure.core.reducers", :end-line 235, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f1 k fkv]))}, with-pr->> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 224, :column 7, :end-line 224, :end-column 17, :arglists (quote ([obj]))}, :name quantum.core.function/with-pr->>, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 17, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, with->> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 226, :column 7, :end-line 226, :end-column 14, :arglists (quote ([expr obj]))}, :name quantum.core.function/with->>, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :method-params ([expr obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr obj]))}, call {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 22, :column 7, :end-line 22, :end-column 11, :arglists (quote ([f] [f x] [f x y] [f x y z] [f x y z & more])), :doc "Call function `f` with additional arguments.", :attribution "Alex Gunnarson", :top-fn {:variadic true, :max-fixed-arity 4, :method-params ([f] [f x] [f x y] [f x y z]), :arglists ([f] [f x] [f x y] [f x y z] [f x y z & more]), :arglists-meta (nil nil nil nil nil)}}, :name quantum.core.function/call, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 4, :method-params ([f] [f x] [f x y] [f x y z]), :arglists ([f] [f x] [f x y] [f x y z] [f x y z & more]), :arglists-meta (nil nil nil nil nil)}, :method-params ([f] [f x] [f x y] [f x y z]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 22, :attribution "Alex Gunnarson", :end-line 22, :max-fixed-arity 4, :fn-var true, :arglists ([f] [f x] [f x y] [f x y z] [f x y z & more]), :doc "Call function `f` with additional arguments."}, call->> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 144, :column 7, :end-line 144, :end-column 14, :arglists (quote ([& [func & args]])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([func & args])], :arglists ([& [func & args]]), :arglists-meta (nil)}}, :name quantum.core.function/call->>, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([func & args])], :arglists ([& [func & args]]), :arglists-meta (nil)}, :method-params [([func & args])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 0, :fn-var true, :arglists ([& [func & args]])}, zeroid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 65, :column 7, :end-line 65, :end-column 13, :arglists (quote ([func base])), :attribution "Alex Gunnarson"}, :name quantum.core.function/zeroid, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :method-params ([func base]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :attribution "Alex Gunnarson", :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([func base]))}, MultiRet {:num-fields 1, :protocols #{}, :name quantum.core.function/MultiRet, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 18, :type true, :column 10, :line 15, :record false, :end-line 15, :skip-protocol-flag nil}, juxtm* {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 170, :column 7, :end-line 170, :end-column 13, :arglists (quote ([map-type args]))}, :name quantum.core.function/juxtm*, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :method-params ([map-type args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([map-type args]))}, do-curried {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 49, :column 8, :end-line 49, :end-column 18, :private true, :arglists (quote ([name doc meta args body])), :attribution "clojure.core.reducers"}, :private true, :name quantum.core.function/do-curried, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 18, :method-params ([name doc meta args body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :attribution "clojure.core.reducers", :end-line 49, :max-fixed-arity 5, :fn-var true, :arglists (quote ([name doc meta args body]))}, with-msg->> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 225, :column 7, :end-line 225, :end-column 18, :arglists (quote ([msg obj]))}, :name quantum.core.function/with-msg->>, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 18, :method-params ([msg obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg obj]))}, ->MultiRet {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 15, :column 10, :end-line 15, :end-column 18, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([val]))}, :protocols #{}, :name quantum.core.function/->MultiRet, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 18, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :skip-protocol-flag nil}, compr {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 83, :column 7, :end-line 83, :end-column 12, :arglists (quote ([& args])), :todo ["Make more efficient by not using |reverse|."], :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name quantum.core.function/compr, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 83, :todo ["Make more efficient by not using |reverse|."], :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, fn-nil {:name quantum.core.function/fn-nil, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 20, :column 1, :end-line 20, :end-column 12, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 20, :column 6, :end-line 20, :end-column 12}}, withfs {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 229, :column 7, :end-line 229, :end-column 13, :arglists (quote ([obj & fs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(obj fs)], :arglists ([obj & fs]), :arglists-meta (nil)}}, :name quantum.core.function/withfs, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(obj fs)], :arglists ([obj & fs]), :arglists-meta (nil)}, :method-params [(obj fs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists ([obj & fs])}, monoid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 73, :column 7, :end-line 73, :end-column 13, :arglists (quote ([op ctor])), :doc "Builds a combining fn out of the supplied operator and identity\n  constructor. op must be associative and ctor called with no args\n  must return an identity value for it.", :attribution "clojure.core.reducers"}, :name quantum.core.function/monoid, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 13, :method-params ([op ctor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :attribution "clojure.core.reducers", :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([op ctor])), :doc "Builds a combining fn out of the supplied operator and identity\n  constructor. op must be associative and ctor called with no args\n  must return an identity value for it."}, withf {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 228, :column 7, :end-line 228, :end-column 12, :arglists (quote ([obj f]))}, :name quantum.core.function/withf, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :method-params ([obj f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj f]))}, f**n {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 107, :column 7, :end-line 107, :end-column 11, :arglists (quote ([func & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(func args)], :arglists ([func & args]), :arglists-meta (nil)}}, :name quantum.core.function/f**n, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(func args)], :arglists ([func & args]), :arglists-meta (nil)}, :method-params [(func args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists ([func & args])}, unary {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 114, :column 7, :end-line 114, :end-column 12, :arglists (quote ([pred]))}, :name quantum.core.function/unary, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 12, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred]))}, withf->> {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :line 227, :column 7, :end-line 227, :end-column 15, :arglists (quote ([f obj]))}, :name quantum.core.function/withf->>, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/function.cljc", :end-column 15, :method-params ([f obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f obj]))}}, :require-macros {quantum.core.function quantum.core.function, ns quantum.core.ns, quantum.core.ns quantum.core.ns}, :cljs.analyzer/constants {:seen #{x__36991__auto__ cljs.core/defn val cljs.core/fn}, :order [val cljs.core/defn cljs.core/fn x__36991__auto__]}, :doc "Useful function-related functions (one could say 'metafunctions').\n\n          Higher-order functions, currying, monoids, reverse comp, arrow macros, inner partials, juxts, etc."}