;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, defalias quantum.core.ns, ns-exclude quantum.core.ns, defonce quantum.core.ns, source quantum.core.ns}, :excludes #{seqable?}, :name quantum.core.core, :imports nil, :requires {core cljs.core, cljs.core cljs.core, clojure.core.rrb-vector clojure.core.rrb-vector, ns quantum.core.ns, quantum.core.ns quantum.core.ns}, :uses {AMap quantum.core.ns, AArrList quantum.core.ns, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, ALSeq quantum.core.ns, ARegex quantum.core.ns, AExactNum quantum.core.ns, AEditable quantum.core.ns, AKey quantum.core.ns, AQueue quantum.core.ns, AError quantum.core.ns, ADouble quantum.core.ns, IAtom cljs.core, AVec quantum.core.ns, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, ATransient quantum.core.ns, IDeref cljs.core, ANum quantum.core.ns, ANil quantum.core.ns}, :defs {->t_quantum$core$core37158 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([lens x getter meta37159])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/->t_quantum$core$core37158, :variadic false, :file "src/cljc/quantum/core/core.cljc", :method-params ([lens x getter meta37159]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 42, :max-fixed-arity 4, :fn-var true, :arglists (quote ([lens x getter meta37159])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, boolean? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 16, :column 7, :end-line 16, :end-column 15, :arglists (quote ([x]))}, :name quantum.core.core/boolean?, :variadic false, :file "src/cljc/quantum/core/core.cljc", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, atom? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([x]))}, :name quantum.core.core/atom?, :variadic false, :file "src/cljc/quantum/core/core.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, t_quantum$core$core37167 {:num-fields 6, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/t_quantum$core$core37167, :file "src/cljc/quantum/core/core.cljc", :type true, :anonymous true, :column 3, :line 54, :record false, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, deref* {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 34, :column 7, :end-line 34, :end-column 13, :arglists (quote ([a]))}, :name quantum.core.core/deref*, :variadic false, :file "src/cljc/quantum/core/core.cljc", :end-column 13, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, t_quantum$core$core37154 {:num-fields 4, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/t_quantum$core$core37154, :file "src/cljc/quantum/core/core.cljc", :type true, :anonymous true, :column 3, :line 42, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, t_quantum$core$core37158 {:num-fields 4, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/t_quantum$core$core37158, :file "src/cljc/quantum/core/core.cljc", :type true, :anonymous true, :column 3, :line 42, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, cursor {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 46, :column 7, :end-line 46, :end-column 13, :arglists (quote ([x getter & [setter]])), :todo ["@setter currently doesn't do anything"], :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x getter [setter])], :arglists ([x getter & [setter]]), :arglists-meta (nil)}}, :name quantum.core.core/cursor, :variadic true, :file "src/cljc/quantum/core/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x getter [setter])], :arglists ([x getter & [setter]]), :arglists-meta (nil)}, :method-params [(x getter [setter])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :todo ["@setter currently doesn't do anything"], :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists ([x getter & [setter]])}, lens {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([x getter]))}, :name quantum.core.core/lens, :variadic false, :file "src/cljc/quantum/core/core.cljc", :end-column 11, :method-params ([x getter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x getter]))}, ->t_quantum$core$core37154 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([lens x getter meta37155])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/->t_quantum$core$core37154, :variadic false, :file "src/cljc/quantum/core/core.cljc", :method-params ([lens x getter meta37155]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 42, :max-fixed-arity 4, :fn-var true, :arglists (quote ([lens x getter meta37155])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, IAtom {:impls (quantum.core.core/t_quantum$core$core37167)}, ->t_quantum$core$core37167 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x getter p__37164 vec__37165 setter meta37168])), :file nil}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name quantum.core.core/->t_quantum$core$core37167, :variadic false, :file "src/cljc/quantum/core/core.cljc", :method-params ([x getter p__37164 vec__37165 setter meta37168]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 54, :max-fixed-arity 6, :fn-var true, :arglists (quote ([x getter p__37164 vec__37165 setter meta37168])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IReset cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, seq-equals {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 101, :column 7, :end-line 101, :end-column 17, :arglists (quote ([a b]))}, :name quantum.core.core/seq-equals, :variadic false, :file "src/cljc/quantum/core/core.cljc", :end-column 17, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, IDeref {:impls (quantum.core.core/t_quantum$core$core37167 quantum.core.core/t_quantum$core$core37158 quantum.core.core/t_quantum$core$core37154)}, seqable? {:name quantum.core.core/seqable?, :file "src/cljc/quantum/core/core.cljc", :line 30, :column 10, :end-line 30, :end-column 23, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/core.cljc", :line 30, :column 15, :end-line 30, :end-column 23}}}, :require-macros {ns quantum.core.ns, quantum.core.ns quantum.core.ns}, :cljs.analyzer/constants {:seen #{x meta37159 meta37155 p__37164 lens meta37168 setter quote :arglists vec__37165 getter}, :order [lens :arglists quote x getter meta37155 meta37159 p__37164 vec__37165 setter meta37168]}, :doc nil}