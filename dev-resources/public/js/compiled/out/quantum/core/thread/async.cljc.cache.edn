;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, whenf*n quantum.core.logic, doto->> quantum.core.function, try-times quantum.core.error, condfc quantum.core.logic, f*n quantum.core.function, coll-and quantum.core.logic, resolve-local quantum.core.macros.core, defservantfn servant.macros, try+ quantum.core.error, if-cljs quantum.core.macros.core, fn-not quantum.core.logic, defcurried quantum.core.function, ifn quantum.core.logic, defalias quantum.core.ns, whencf*n quantum.core.logic, with-do quantum.core.function, <- quantum.core.function, whenc quantum.core.logic, throw-when quantum.core.error, ifp quantum.core.logic, assertf-> quantum.core.error, fn-or quantum.core.logic, if*n quantum.core.logic, fn-eq? quantum.core.logic, condf*n quantum.core.logic, ns-exclude quantum.core.ns, coll-or quantum.core.logic, assertf->> quantum.core.error, fn-and quantum.core.logic, defonce quantum.core.ns, fn-> quantum.core.function, rfn quantum.core.function, throw+ quantum.core.error, source quantum.core.ns, condpc quantum.core.logic, fn= quantum.core.logic, assert quantum.core.error, throw-unless quantum.core.error, whenp quantum.core.logic, whenf quantum.core.logic, eq? quantum.core.logic, with-assert quantum.core.error, condf quantum.core.logic, fn->> quantum.core.function}, :excludes #{future promise realized?}, :name quantum.core.thread.async, :imports nil, :requires {clojure.core.rrb-vector clojure.core.rrb-vector, logic quantum.core.logic, log quantum.core.log, quantum.core.macros.core quantum.core.macros.core, cmacros quantum.core.macros.core, async cljs.core.async, servant servant.core, cljs.core cljs.core, fn quantum.core.function, vec quantum.core.data.vector, quantum.core.log quantum.core.log, cljs.core.async cljs.core.async, ns quantum.core.ns, quantum.core.data.vector quantum.core.data.vector, quantum.core.logic quantum.core.logic, err quantum.core.error, servant.core servant.core, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, core cljs.core, quantum.core.function quantum.core.function}, :uses {AMap quantum.core.ns, juxtm quantum.core.function, vector+? quantum.core.data.vector, juxt-kv quantum.core.function, any? quantum.core.logic, AArrList quantum.core.ns, firsta quantum.core.function, *fn quantum.core.function, Err quantum.core.error, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, catvec quantum.core.data.vector, ASet quantum.core.ns, with-pr->> quantum.core.function, nnil? quantum.core.logic, ALSeq quantum.core.ns, ARegex quantum.core.ns, with->> quantum.core.function, call quantum.core.function, AExactNum quantum.core.ns, subvec+ quantum.core.data.vector, AEditable quantum.core.ns, zeroid quantum.core.function, AKey quantum.core.ns, splice-or quantum.core.logic, vector+ quantum.core.data.vector, with-msg->> quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, fn-nil quantum.core.function, ADouble quantum.core.ns, withfs quantum.core.function, AVec quantum.core.ns, ->ex quantum.core.error, ADecimal quantum.core.ns, Exception quantum.core.ns, AInt quantum.core.ns, monoid quantum.core.function, ATransient quantum.core.ns, withf quantum.core.function, nempty? quantum.core.logic, ANum quantum.core.ns, ANil quantum.core.ns, unary quantum.core.function, withf->> quantum.core.function}, :defs {timeout {:name quantum.core.thread.async/timeout, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 260, :column 1, :end-line 260, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 260, :column 11, :end-line 260, :end-column 18}}, take!! {:name quantum.core.thread.async/take!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 98, :column 1, :end-line 98, :end-column 16, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 98, :column 10, :end-line 98, :end-column 16, :declared true}}, concur {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 275, :column 7, :end-line 275, :end-column 13, :arglists (quote ([& fs])), :doc "Executes functions @fs concurrently, waiting on the slowest one to finish.\n   Returns a vector of the results.\n\n   Note: The example should only take 2 seconds, not 3.", :usage (quote (concur (fn* [] (do (println "A") (Thread/sleep 1000))) (fn* [] (do (println "B") (Thread/sleep 2000))))), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fs)], :arglists ([& fs]), :arglists-meta (nil)}}, :name quantum.core.thread.async/concur, :variadic true, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(fs)], :arglists ([& fs]), :arglists-meta (nil)}, :method-params [(fs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :usage (quote (concur (fn* [] (do (println "A") (Thread/sleep 1000))) (fn* [] (do (println "B") (Thread/sleep 2000))))), :line 275, :end-line 275, :max-fixed-arity 0, :fn-var true, :arglists ([& fs]), :doc "Executes functions @fs concurrently, waiting on the slowest one to finish.\n   Returns a vector of the results.\n\n   Note: The example should only take 2 seconds, not 3."}, map->QueueCloseRequest {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 43, :column 12, :end-line 43, :end-column 29, :internal-ctor true, :factory :map, :arglists (quote ([G__44044]))}, :name quantum.core.thread.async/map->QueueCloseRequest, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 29, :method-params ([G__44044]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__44044]))}, <! {:name quantum.core.thread.async/<!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 103, :column 1, :end-line 103, :end-column 13, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 103, :column 11, :end-line 103, :end-column 13}}, QueueCloseRequest {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.thread.async/QueueCloseRequest, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 29, :type true, :column 12, :internal-ctor true, :line 43, :record true, :end-line 43, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, web-workers-set-up? {:name quantum.core.thread.async/web-workers-set-up?, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 291, :column 10, :end-line 291, :end-column 34, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 291, :column 15, :end-line 291, :end-column 34}}, close! {:name quantum.core.thread.async/close!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 172, :column 1, :end-line 172, :end-column 16, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 172, :column 10, :end-line 172, :end-column 16, :declared true}}, chan {:name quantum.core.thread.async/chan, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 77, :column 1, :end-line 77, :end-column 14, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 77, :column 10, :end-line 77, :end-column 14, :declared true}}, TerminationRequest {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.thread.async/TerminationRequest, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 30, :type true, :column 12, :internal-ctor true, :line 44, :record true, :end-line 44, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Threadpool {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 297, :column 12, :end-line 297, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__44084]))}, :name quantum.core.thread.async/map->Threadpool, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 22, :method-params ([G__44084]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__44084]))}, >!! {:name quantum.core.thread.async/>!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 122, :column 1, :end-line 122, :end-column 13, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 122, :column 10, :end-line 122, :end-column 13, :declared true}}, put!! {:name quantum.core.thread.async/put!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 119, :column 1, :end-line 119, :end-column 15, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 119, :column 10, :end-line 119, :end-column 15, :declared true}}, web-worker? {:name quantum.core.thread.async/web-worker?, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 293, :column 10, :end-line 293, :end-column 31, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 293, :column 20, :end-line 293, :end-column 31}}, ->threadpool {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 324, :column 7, :end-line 324, :end-column 19, :arglists (quote ([{:keys [thread-ct script-src], :as opts}]))}, :name quantum.core.thread.async/->threadpool, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 19, :method-params ([p__44092]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [thread-ct script-src], :as opts}]))}, ->TerminationRequest {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 44, :column 12, :end-line 44, :end-column 30, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.thread.async/->TerminationRequest, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->TerminationRequest {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 44, :column 12, :end-line 44, :end-column 30, :internal-ctor true, :factory :map, :arglists (quote ([G__44052]))}, :name quantum.core.thread.async/map->TerminationRequest, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 30, :method-params ([G__44052]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__44052]))}, <!! {:name quantum.core.thread.async/<!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 102, :column 1, :end-line 102, :end-column 13, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 102, :column 10, :end-line 102, :end-column 13, :declared true}}, ->QueueCloseRequest {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 43, :column 12, :end-line 43, :end-column 29, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.thread.async/->QueueCloseRequest, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, interrupt! {:name quantum.core.thread.async/interrupt!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 149, :column 1, :end-line 149, :end-column 20, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 149, :column 10, :end-line 149, :end-column 20, :declared true}}, bootstrap-worker {:name quantum.core.thread.async/bootstrap-worker, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 294, :column 10, :end-line 294, :end-column 36, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 294, :column 20, :end-line 294, :end-column 36}}, peek!! {:name quantum.core.thread.async/peek!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 142, :column 1, :end-line 142, :end-column 16, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 142, :column 10, :end-line 142, :end-column 16, :declared true}}, message? {:name quantum.core.thread.async/message?, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 131, :column 1, :end-line 131, :end-column 18, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 131, :column 10, :end-line 131, :end-column 18, :declared true}}, closed? {:name quantum.core.thread.async/closed?, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 187, :column 1, :end-line 187, :end-column 17, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 187, :column 10, :end-line 187, :end-column 17, :declared true}}, >! {:name quantum.core.thread.async/>!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 124, :column 1, :end-line 124, :end-column 13, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 124, :column 11, :end-line 124, :end-column 13}}, dispatch {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 331, :column 24, :end-line 331, :end-column 32, :arglists (quote ([f])), :doc "The global web worker dispatch fn"}, :name quantum.core.thread.async/dispatch, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 32, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "The global web worker dispatch fn"}, Threadpool {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name quantum.core.thread.async/Threadpool, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 297, :record true, :end-line 297, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, close-req? {:name quantum.core.thread.async/close-req?, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 133, :column 1, :end-line 133, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 133, :column 6, :end-line 133, :end-column 16}}, empty! {:name quantum.core.thread.async/empty!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 111, :column 1, :end-line 111, :end-column 16, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 111, :column 10, :end-line 111, :end-column 16, :declared true}}, ->Threadpool {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 297, :column 12, :end-line 297, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([thread-ct threads script-src]))}, :name quantum.core.thread.async/->Threadpool, :variadic false, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :end-column 22, :method-params ([thread-ct threads script-src]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 297, :end-line 297, :max-fixed-arity 3, :fn-var true, :arglists (quote ([thread-ct threads script-src]))}, alts!! {:name quantum.core.thread.async/alts!!, :file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 253, :column 1, :end-line 253, :end-column 16, :declared true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/core/thread/async.cljc", :line 253, :column 10, :end-line 253, :end-column 16, :declared true}}}, :require-macros {logic quantum.core.logic, cljs.core.async.macros cljs.core.async.macros, log quantum.core.log, quantum.core.macros.core quantum.core.macros.core, cmacros quantum.core.macros.core, async cljs.core.async.macros, servant servant.macros, fn quantum.core.function, quantum.core.log quantum.core.log, ns quantum.core.ns, servant.macros servant.macros, quantum.core.logic quantum.core.logic, err quantum.core.error, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, quantum.core.function quantum.core.function}, :cljs.analyzer/constants {:seen #{timeout quantum.core.thread.async/bootstrap-worker :script-src quantum.core.thread.async/>! <! quantum.core.thread.async/web-worker? :else :thread-ct servant.core/webworker? :ns :name script-src servant.worker cljs.core.async/timeout :file :end-column :recur :debug thread-ct cljs.core.async cljs.core.async/>! bootstrap :column msecs web-worker? servant.core :threads :line val :macro servant.worker/bootstrap quantum.core.thread.async/timeout port :attribution bootstrap-worker :end-line quantum.core.thread.async/<! >! :assertion-error threads webworker? :arglists quantum.core.thread.async :doc cljs.core.async/<! :user :test}, :order [cljs.core.async/<! :ns :name :file :end-column :column :line :end-line :arglists :doc :test cljs.core.async <! port :macro quantum.core.thread.async/<! quantum.core.thread.async :attribution cljs.core.async/>! >! val quantum.core.thread.async/>! cljs.core.async/timeout timeout msecs quantum.core.thread.async/timeout :recur :else servant.core/webworker? servant.core webworker? quantum.core.thread.async/web-worker? web-worker? servant.worker/bootstrap servant.worker bootstrap quantum.core.thread.async/bootstrap-worker bootstrap-worker :thread-ct :threads :script-src :user :debug thread-ct threads script-src :assertion-error]}, :doc "Asynchronous things."}