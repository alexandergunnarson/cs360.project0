;; Analyzed by ClojureScript 1.7.170
{:use-macros {def- quantum.core.ns, whenf*n quantum.core.logic, doto->> quantum.core.function, try-times quantum.core.error, condfc quantum.core.logic, f*n quantum.core.function, coll-and quantum.core.logic, try+ quantum.core.error, fn-not quantum.core.logic, defcurried quantum.core.function, ifn quantum.core.logic, defalias quantum.core.ns, whencf*n quantum.core.logic, with-do quantum.core.function, <- quantum.core.function, whenc quantum.core.logic, throw-when quantum.core.error, ifp quantum.core.logic, assertf-> quantum.core.error, fn-or quantum.core.logic, if*n quantum.core.logic, fn-eq? quantum.core.logic, condf*n quantum.core.logic, ns-exclude quantum.core.ns, coll-or quantum.core.logic, assertf->> quantum.core.error, fn-and quantum.core.logic, defonce quantum.core.ns, fn-> quantum.core.function, rfn quantum.core.function, throw+ quantum.core.error, source quantum.core.ns, condpc quantum.core.logic, fn= quantum.core.logic, assert quantum.core.error, throw-unless quantum.core.error, whenp quantum.core.logic, whenf quantum.core.logic, eq? quantum.core.logic, with-assert quantum.core.error, condf quantum.core.logic, fn->> quantum.core.function}, :excludes #{defonce assert merge sorted-map-by sorted-map seqable?}, :name quantum.ui.style.css.core, :imports nil, :requires {clojure.core.rrb-vector clojure.core.rrb-vector, logic quantum.core.logic, log quantum.core.log, map quantum.core.data.map, css-style garden.stylesheet, tpred quantum.core.type.predicates, cljs.core cljs.core, fn quantum.core.function, color garden.color, quantum.core.log quantum.core.log, ns quantum.core.ns, quantum.core.logic quantum.core.logic, err quantum.core.error, css garden.core, garden.stylesheet garden.stylesheet, garden.color garden.color, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, quantum.core.data.map quantum.core.data.map, core cljs.core, quantum.core.function quantum.core.function, garden.core garden.core, quantum.core.type.predicates quantum.core.type.predicates}, :uses {AMap quantum.core.ns, juxtm quantum.core.function, juxt-kv quantum.core.function, any? quantum.core.logic, AArrList quantum.core.ns, boolean? quantum.core.type.predicates, atom? quantum.core.type.predicates, firsta quantum.core.function, *fn quantum.core.function, Err quantum.core.error, ABool quantum.core.ns, ATreeMap quantum.core.ns, js-println quantum.core.ns, IllegalArgumentException quantum.core.ns, ASet quantum.core.ns, with-pr->> quantum.core.function, nnil? quantum.core.logic, ALSeq quantum.core.ns, ARegex quantum.core.ns, with->> quantum.core.function, call quantum.core.function, AExactNum quantum.core.ns, AEditable quantum.core.ns, zeroid quantum.core.function, AKey quantum.core.ns, splice-or quantum.core.logic, css garden.core, color? garden.color, with-msg->> quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, fn-nil quantum.core.function, ADouble quantum.core.ns, withfs quantum.core.function, AVec quantum.core.ns, derefable? quantum.core.type.predicates, ->ex quantum.core.error, ADecimal quantum.core.ns, Exception quantum.core.ns, ordered-map quantum.core.data.map, AInt quantum.core.ns, monoid quantum.core.function, ATransient quantum.core.ns, withf quantum.core.function, CSSColor garden.color, nempty? quantum.core.logic, ANum quantum.core.ns, ANil quantum.core.ns, map-entry quantum.core.data.map, unary quantum.core.function, seqable? quantum.core.type.predicates, withf->> quantum.core.function}, :defs {class-watchlist {:name quantum.ui.style.css.core/class-watchlist, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 118, :column 1, :end-line 118, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 118, :column 6, :end-line 118, :end-column 21}}, class-watch? {:name quantum.ui.style.css.core/class-watch?, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 117, :column 1, :end-line 117, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 117, :column 6, :end-line 117, :end-column 18}}, styles-template {:name quantum.ui.style.css.core/styles-template, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 120, :column 1, :end-line 120, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 120, :column 6, :end-line 120, :end-column 21}}, px-props {:name quantum.ui.style.css.core/px-props, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 127, :column 1, :end-line 127, :end-column 14, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 127, :column 6, :end-line 127, :end-column 14}}, compatibility-chart {:name quantum.ui.style.css.core/compatibility-chart, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 142, :column 1, :end-line 142, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 142, :column 6, :end-line 142, :end-column 25}}, rgb {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :end-column 18, :column 15, :line 80, :out "rgb(244,176,36)", :todo "simplify with str package", :end-line 80, :tag String, :arglists (quote ([r g b])), :in [244 176 36]}, :name quantum.ui.style.css.core/rgb, :variadic false, :file "src/cljc/quantum/ui/style/css/core.cljc", :end-column 18, :method-params ([r g b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :out "rgb(244,176,36)", :todo "simplify with str package", :ret-tag String, :end-line 80, :max-fixed-arity 3, :tag String, :fn-var true, :arglists (quote ([r g b])), :in [244 176 36]}, px {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 78, :column 15, :end-line 78, :end-column 17, :tag String, :arglists (quote ([n]))}, :name quantum.ui.style.css.core/px, :variadic false, :file "src/cljc/quantum/ui/style/css/core.cljc", :end-column 17, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :ret-tag String, :end-line 78, :max-fixed-arity 1, :tag String, :fn-var true, :arglists (quote ([n]))}, dynamic-styles? {:name quantum.ui.style.css.core/dynamic-styles?, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 38, :column 1, :end-line 38, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 38, :column 6, :end-line 38, :end-column 21}}, themes {:name quantum.ui.style.css.core/themes, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 119, :column 1, :end-line 119, :end-column 12, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 119, :column 6, :end-line 119, :end-column 12}}, ANY {:name quantum.ui.style.css.core/ANY, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 141, :column 1, :end-line 141, :end-column 9, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 141, :column 6, :end-line 141, :end-column 9}}, theme {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 122, :column 7, :end-line 122, :end-column 12, :arglists (quote ([k sub-k] [k sub-k & ks])), :todo ["More arity"], :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([k sub-k]), :arglists ([k sub-k] [k sub-k & ks]), :arglists-meta (nil nil)}}, :name quantum.ui.style.css.core/theme, :variadic true, :file "src/cljc/quantum/ui/style/css/core.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([k sub-k]), :arglists ([k sub-k] [k sub-k & ks]), :arglists-meta (nil nil)}, :method-params ([k sub-k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :todo ["More arity"], :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists ([k sub-k] [k sub-k & ks])}, hex {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 91, :column 15, :end-line 91, :end-column 18, :tag String, :arglists (quote ([s]))}, :name quantum.ui.style.css.core/hex, :variadic false, :file "src/cljc/quantum/ui/style/css/core.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :ret-tag String, :end-line 91, :max-fixed-arity 1, :tag String, :fn-var true, :arglists (quote ([s]))}, listener-map {:name quantum.ui.style.css.core/listener-map, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 16, :column 6, :end-line 16, :end-column 18}}, url {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 87, :column 15, :end-line 87, :end-column 18, :tag String, :arglists (quote ([s]))}, :name quantum.ui.style.css.core/url, :variadic false, :file "src/cljc/quantum/ui/style/css/core.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :ret-tag String, :end-line 87, :max-fixed-arity 1, :tag String, :fn-var true, :arglists (quote ([s]))}, styles {:name quantum.ui.style.css.core/styles, :file "src/cljc/quantum/ui/style/css/core.cljc", :line 116, :column 1, :end-line 116, :end-column 12, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/src/cljc/quantum/ui/style/css/core.cljc", :line 116, :column 6, :end-line 116, :end-column 12}}}, :require-macros {logic quantum.core.logic, log quantum.core.log, fn quantum.core.function, color garden.color, quantum.core.log quantum.core.log, ns quantum.core.ns, quantum.core.logic quantum.core.logic, err quantum.core.error, garden.color garden.color, quantum.core.error quantum.core.error, quantum.core.ns quantum.core.ns, quantum.core.function quantum.core.function}, :cljs.analyzer/constants {:seen #{:-webkit-text-rendering :-webkit-box-direction :text-rendering :-ms-flex-wrap :box-sizing :align-items :align-content :wrap :border-right :opera :-webkit-align-content :-moz-text-rendering :-o-appearance :safari :font-size :transition :linear-gradient :-o-font-smoothing :-ms-flex-direction :margin-left :-webkit-flex-flow :-webkit-flex-wrap :margin-top :-webkit-flex :width :background :flex-wrap :flex :-webkit-font-smoothing :-ms-appearance :-webkit-box :-webkit-box-orient :border-left :-moz-box-sizing :padding-right :-ms-box-sizing :column :center :firefox :font-smoothing :-o-box-sizing :-moz-box :-webkit-appearance :padding-top :chrome :padding-left :ie :-webkit-box-align :-moz-font-smoothing :padding :display :appearance :-ms-flexbox :padding-bottom :margin-right :-webkit-transition-duration :border :border-top :-ms-flex-line-pack :-webkit-align-items :stretch :-webkit-transition :transition-duration :margin-bottom :-o-text-rendering :-ms-text-rendering :-ms-flex-flow :flex-direction :-webkit-flex-direction :height :border-bottom :row :-ms-font-smoothing :-ms-flex-align :flex-flow :margin :safari-}, :order [:border-right :font-size :margin-left :margin-top :width :border-left :padding-right :padding-top :padding-left :padding :padding-bottom :margin-right :border :border-top :margin-bottom :height :border-bottom :margin :text-rendering :box-sizing :align-items :align-content :transition :background :flex-wrap :font-smoothing :display :appearance :transition-duration :flex-direction :flex-flow :safari :ie :opera :firefox :-webkit-text-rendering :-ms-text-rendering :-o-text-rendering :-moz-text-rendering :-ms-box-sizing :-o-box-sizing :-moz-box-sizing :stretch :-webkit-align-items :-webkit-box-align :-ms-flex-align :center :-webkit-align-content :-ms-flex-line-pack :chrome :-webkit-transition :linear-gradient :wrap :-webkit-flex-wrap :-ms-flex-wrap :-webkit-font-smoothing :-ms-font-smoothing :-o-font-smoothing :-moz-font-smoothing :flex :safari- :-ms-flexbox :-webkit-box :-moz-box :-webkit-flex :-webkit-appearance :-ms-appearance :-o-appearance :-webkit-transition-duration :row :column :-webkit-flex-direction :-webkit-box-orient :-webkit-box-direction :-ms-flex-direction :-webkit-flex-flow :-ms-flex-flow]}, :doc "CSS-specific functions.\n\n          Mainly to style Hiccup-style components to use 'virtual'\n          CSS instead of generating an external stylesheet."}