;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, >!x datomic-cljs.macros}, :excludes #{}, :name datomic-cljs.api, :imports nil, :requires {http datomic-cljs.http, datomic-cljs.http datomic-cljs.http, util datomic-cljs.util, datomic-cljs.util datomic-cljs.util, async cljs.core.async, cljs.core.async cljs.core.async, reader cljs.reader, cljs.reader cljs.reader}, :uses {<! cljs.core.async, >! cljs.core.async}, :defs {-basis-t {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 48, :column 4, :end-line 48, :end-column 12, :protocol datomic-cljs.api/IDatomicDB, :doc nil, :arglists (quote ([db]))}, :protocol datomic-cljs.api/IDatomicDB, :name datomic-cljs.api/-basis-t, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :doc nil}, entity {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 245, :column 7, :end-line 245, :end-column 13, :arglists (quote ([db eid])), :doc "Returns a map of the entity's attributes for the given id."}, :name datomic-cljs.api/entity, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 13, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid])), :doc "Returns a map of the entity's attributes for the given id."}, as-of-t {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 184, :column 7, :end-line 184, :end-column 14, :arglists (quote ([{{as-of :as-of} :implicit-args}])), :doc "Returns the as-of point, or nil if none."}, :name datomic-cljs.api/as-of-t, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([p__46713]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{as-of :as-of} :implicit-args}])), :doc "Returns the as-of point, or nil if none."}, -datoms {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 47, :column 4, :end-line 47, :end-column 11, :protocol datomic-cljs.api/IDatomicDB, :doc nil, :arglists (quote ([db index components]))}, :protocol datomic-cljs.api/IDatomicDB, :name datomic-cljs.api/-datoms, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 11, :method-params ([db index components]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db index components])), :doc nil}, ->DbId {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 13, :column 10, :end-line 13, :end-column 14, :protocols #{datomic-cljs.api/Object cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([spec]))}, :protocols #{datomic-cljs.api/Object cljs.core/IPrintWithWriter}, :name datomic-cljs.api/->DbId, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :skip-protocol-flag #{cljs.core/IPrintWithWriter}}, datoms {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 266, :column 7, :end-line 266, :end-column 13, :arglists (quote ([db index & {:as components}])), :doc "Raw access to the index data, by index. The index must be\n   supplied, along with optional leading components.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(db index {:as components})], :arglists ([db index & {:as components}]), :arglists-meta (nil)}}, :name datomic-cljs.api/datoms, :variadic true, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(db index {:as components})], :arglists ([db index & {:as components}]), :arglists-meta (nil)}, :method-params [(db index {:as components})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists ([db index & {:as components}]), :doc "Raw access to the index data, by index. The index must be\n   supplied, along with optional leading components."}, -transact {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 52, :column 4, :end-line 52, :end-column 13, :protocol datomic-cljs.api/IDatomicConnection, :doc nil, :arglists (quote ([conn tx-data-str]))}, :protocol datomic-cljs.api/IDatomicConnection, :name datomic-cljs.api/-transact, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 13, :method-params ([conn tx-data-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn tx-data-str])), :doc nil}, squuid-seconds-component {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 279, :column 8, :end-line 279, :end-column 32, :private true, :arglists (quote ([])), :doc "Returns the current time rounded to the nearest second."}, :private true, :name datomic-cljs.api/squuid-seconds-component, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns the current time rounded to the nearest second."}, -q {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 45, :column 4, :end-line 45, :end-column 6, :protocol datomic-cljs.api/IDatomicDB, :doc nil, :arglists (quote ([db query inputs]))}, :protocol datomic-cljs.api/IDatomicDB, :name datomic-cljs.api/-q, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 6, :method-params ([db query inputs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db query inputs])), :doc nil}, ->DatomicDB {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 66, :column 12, :end-line 66, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([conn implicit-args implicit-qs]))}, :name datomic-cljs.api/->DatomicDB, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 21, :method-params ([conn implicit-args implicit-qs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 66, :end-line 66, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn implicit-args implicit-qs]))}, q {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 228, :column 7, :end-line 228, :end-column 8, :arglists (quote ([query db & inputs])), :doc "Execute a query against a database value with inputs. Returns a\n   core.async channel that will contain the result of the query, and\n   will be closed when the query is complete.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(query db inputs)], :arglists ([query db & inputs]), :arglists-meta (nil)}}, :name datomic-cljs.api/q, :variadic true, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(query db inputs)], :arglists ([query db & inputs]), :arglists-meta (nil)}, :method-params [(query db inputs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 2, :fn-var true, :arglists ([query db & inputs]), :doc "Execute a query against a database value with inputs. Returns a\n   core.async channel that will contain the result of the query, and\n   will be closed when the query is complete."}, index-range {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 272, :column 7, :end-line 272, :end-column 18, :arglists (quote ([db index start end])), :doc "Returns a range of datoms in the given index, starting from start,\n   or the beginning if start is nil, and going to end, or through the\n   end if end is nil."}, :name datomic-cljs.api/index-range, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 18, :method-params ([db index start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db index start end])), :doc "Returns a range of datoms in the given index, starting from start,\n   or the beginning if start is nil, and going to end, or through the\n   end if end is nil."}, since {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 159, :column 7, :end-line 159, :end-column 12, :arglists (quote ([db t])), :doc "Returns the value of the database since some point t, exclusive.\n   t can be a transaction number, transaction ID, or inst."}, :name datomic-cljs.api/since, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db t])), :doc "Returns the value of the database since some point t, exclusive.\n   t can be a transaction number, transaction ID, or inst."}, squuid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 291, :column 7, :end-line 291, :end-column 13, :arglists (quote ([])), :doc "Constructs a semi-sequential UUID. Useful for creating UUIDs that\n   don't fragment indexes. Returns a UUID whose most significant 32\n   bits are the current time in milliseconds, rounded to the nearest\n   second."}, :name datomic-cljs.api/squuid, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Constructs a semi-sequential UUID. Useful for creating UUIDs that\n   don't fragment indexes. Returns a UUID whose most significant 32\n   bits are the current time in milliseconds, rounded to the nearest\n   second."}, limit {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 172, :column 7, :end-line 172, :end-column 12, :arglists (quote ([db n])), :doc "Returns a value of the database that limits the number of results\n   from query and datoms to given number n."}, :name datomic-cljs.api/limit, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db n])), :doc "Returns a value of the database that limits the number of results\n   from query and datoms to given number n."}, DatomicDB {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup datomic-cljs.api/IDatomicDB}, :name datomic-cljs.api/DatomicDB, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 66, :record true, :end-line 66, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, squuid-time-millis {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 305, :column 7, :end-line 305, :end-column 25, :arglists (quote ([squuid])), :doc "Get the time part of a squuid."}, :name datomic-cljs.api/squuid-time-millis, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 25, :method-params ([squuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([squuid])), :doc "Get the time part of a squuid."}, -conn-url-root {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 51, :column 4, :end-line 51, :end-column 18, :protocol datomic-cljs.api/IDatomicConnection, :doc nil, :arglists (quote ([conn]))}, :protocol datomic-cljs.api/IDatomicConnection, :name datomic-cljs.api/-conn-url-root, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 18, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn])), :doc nil}, create-database {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 121, :column 7, :end-line 121, :end-column 22, :arglists (quote ([hostname port alias db-name])), :doc "Create or connect to a Datomic database via a Datomic REST service\n   by passing the following arguments:\n\n     hostname, e.g. localhost;\n     port, the port on which the REST service is listening;\n     alias, the transactor alias;\n     db-name, the name of the database being created.\n\n   Returns a core.async channel eventually containing a database\n   connection (as if using datomic-cljs.api/connect), or an error."}, :name datomic-cljs.api/create-database, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 22, :method-params ([hostname port alias db-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 4, :fn-var true, :arglists (quote ([hostname port alias db-name])), :doc "Create or connect to a Datomic database via a Datomic REST service\n   by passing the following arguments:\n\n     hostname, e.g. localhost;\n     port, the port on which the REST service is listening;\n     alias, the transactor alias;\n     db-name, the name of the database being created.\n\n   Returns a core.async channel eventually containing a database\n   connection (as if using datomic-cljs.api/connect), or an error."}, db {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 148, :column 7, :end-line 148, :end-column 9, :arglists (quote ([{:keys [db-alias], :as conn}])), :doc "Creates an abstract Datomic value that can be queried."}, :name datomic-cljs.api/db, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 9, :method-params ([p__46708]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [db-alias], :as conn}])), :doc "Creates an abstract Datomic value that can be queried."}, DatomicConnection {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta datomic-cljs.api/IDatomicConnection cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name datomic-cljs.api/DatomicConnection, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 29, :type true, :column 12, :internal-ctor true, :line 54, :record true, :end-line 54, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, offset {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 178, :column 7, :end-line 178, :end-column 13, :arglists (quote ([db n])), :doc "Returns a value of the database that offsets the results of query\n   and datoms by given number n."}, :name datomic-cljs.api/offset, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 13, :method-params ([db n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db n])), :doc "Returns a value of the database that offsets the results of query\n   and datoms by given number n."}, connect {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 110, :column 7, :end-line 110, :end-column 14, :arglists (quote ([hostname port alias db-name])), :doc "Create an abstract connection to a Datomic REST service by passing\n   the following arguments:\n\n     hostname, e.g. localhost;\n     port, the port on which the REST service is listening;\n     alias, the transactor alias;\n     dbname, the name of the database being connected to."}, :name datomic-cljs.api/connect, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([hostname port alias db-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 4, :fn-var true, :arglists (quote ([hostname port alias db-name])), :doc "Create an abstract connection to a Datomic REST service by passing\n   the following arguments:\n\n     hostname, e.g. localhost;\n     port, the port on which the REST service is listening;\n     alias, the transactor alias;\n     dbname, the name of the database being connected to."}, q-ffirst {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 235, :column 8, :end-line 235, :end-column 16, :private true, :arglists (quote ([query db & inputs])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(query db inputs)], :arglists ([query db & inputs]), :arglists-meta (nil)}}, :private true, :name datomic-cljs.api/q-ffirst, :variadic true, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(query db inputs)], :arglists ([query db & inputs]), :arglists-meta (nil)}, :method-params [(query db inputs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists ([query db & inputs])}, DbId {:num-fields 1, :protocols #{datomic-cljs.api/Object cljs.core/IPrintWithWriter}, :name datomic-cljs.api/DbId, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :type true, :column 10, :line 13, :record false, :end-line 13, :skip-protocol-flag #{cljs.core/IPrintWithWriter}}, history {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 165, :column 7, :end-line 165, :end-column 14, :arglists (quote ([db])), :doc "Returns a special database value containing all assertions and\n   retractions across time. This database value can be used with\n   datoms and index-range calls."}, :name datomic-cljs.api/history, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :doc "Returns a special database value containing all assertions and\n   retractions across time. This database value can be used with\n   datoms and index-range calls."}, map->DatomicDB {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 66, :column 12, :end-line 66, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__46400]))}, :name datomic-cljs.api/map->DatomicDB, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 21, :method-params ([G__46400]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__46400]))}, basis-t {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 194, :column 7, :end-line 194, :end-column 14, :arglists (quote ([db])), :doc "Returns a core.async channel eventually containing the t of the\n   the most recent transaction available via this db value."}, :name datomic-cljs.api/basis-t, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :doc "Returns a core.async channel eventually containing the t of the\n   the most recent transaction available via this db value."}, -entity {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 46, :column 4, :end-line 46, :end-column 11, :protocol datomic-cljs.api/IDatomicDB, :doc nil, :arglists (quote ([db eid]))}, :protocol datomic-cljs.api/IDatomicDB, :name datomic-cljs.api/-entity, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 11, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid])), :doc nil}, IDatomicConnection {:meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 50, :column 14, :end-line 50, :end-column 32, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-conn-url-root [[conn]], -transact [[conn tx-data-str]]}}}, :protocol-symbol true, :name datomic-cljs.api/IDatomicConnection, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 32, :column 1, :line 50, :protocol-info {:methods {-conn-url-root [[conn]], -transact [[conn tx-data-str]]}}, :info nil, :end-line 50, :impls #{datomic-cljs.api/DatomicConnection}, :doc nil, :jsdoc ("@interface")}, read-dbid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 22, :column 8, :end-line 22, :end-column 17, :private true, :arglists (quote ([spec]))}, :private true, :name datomic-cljs.api/read-dbid, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 17, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec]))}, since-t {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 189, :column 7, :end-line 189, :end-column 14, :arglists (quote ([{{since :since} :implicit-args}])), :doc "Returns the since point, or nil if none."}, :name datomic-cljs.api/since-t, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 14, :method-params ([p__46722]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{since :since} :implicit-args}])), :doc "Returns the since point, or nil if none."}, transact {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 200, :column 7, :end-line 200, :end-column 15, :arglists (quote ([conn tx-data])), :doc "Submits a transaction to the database for writing. The transaction\n   data is sent to the Transactor and, if transactAsync, processed\n   asynchronously.\n\n   tx-data is a list of lists, each of which specifies a write\n   operation, either an assertion, a retraction or the invocation of\n   a data function. Each nested list starts with a keyword identifying\n   the operation followed by the arguments for the operation.\n\n   Returns a core.async channel that will contain a map with the\n   following keys:\n\n     :db-before, the database value before the transaction;\n     :db-after, the database value after the transaction;\n     :tx-data, the collection of Datums produced by the transaction;\n     :tempids, an argument to resolve-tempids."}, :name datomic-cljs.api/transact, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 15, :method-params ([conn tx-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn tx-data])), :doc "Submits a transaction to the database for writing. The transaction\n   data is sent to the Transactor and, if transactAsync, processed\n   asynchronously.\n\n   tx-data is a list of lists, each of which specifies a write\n   operation, either an assertion, a retraction or the invocation of\n   a data function. Each nested list starts with a keyword identifying\n   the operation followed by the arguments for the operation.\n\n   Returns a core.async channel that will contain a map with the\n   following keys:\n\n     :db-before, the database value before the transaction;\n     :db-after, the database value after the transaction;\n     :tx-data, the collection of Datums produced by the transaction;\n     :tempids, an argument to resolve-tempids."}, as-of {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 153, :column 7, :end-line 153, :end-column 12, :arglists (quote ([db t])), :doc "Returns the value of the database as of some point t, inclusive.\n   t can be a transaction number, transaction ID, or inst."}, :name datomic-cljs.api/as-of, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db t])), :doc "Returns the value of the database as of some point t, inclusive.\n   t can be a transaction number, transaction ID, or inst."}, ->DatomicConnection {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 54, :column 12, :end-line 54, :end-column 29, :internal-ctor true, :factory :positional, :arglists (quote ([hostname port db-alias]))}, :name datomic-cljs.api/->DatomicConnection, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 29, :method-params ([hostname port db-alias]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hostname port db-alias]))}, IDatomicDB {:meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 44, :column 14, :end-line 44, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-q [[db query inputs]], -entity [[db eid]], -datoms [[db index components]], -basis-t [[db]]}}}, :protocol-symbol true, :name datomic-cljs.api/IDatomicDB, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 24, :column 1, :line 44, :protocol-info {:methods {-q [[db query inputs]], -entity [[db eid]], -datoms [[db index components]], -basis-t [[db]]}}, :info nil, :end-line 44, :impls #{datomic-cljs.api/DatomicDB}, :doc nil, :jsdoc ("@interface")}, map->DatomicConnection {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 54, :column 12, :end-line 54, :end-column 29, :internal-ctor true, :factory :map, :arglists (quote ([G__46392]))}, :name datomic-cljs.api/map->DatomicConnection, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 29, :method-params ([G__46392]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__46392]))}, ident {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 258, :column 7, :end-line 258, :end-column 12, :arglists (quote ([db eid])), :doc "Returns a core.async channel that will contain the ident\n   associated with an entity id, or the ident itself if passed."}, :name datomic-cljs.api/ident, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db eid])), :doc "Returns a core.async channel that will contain the ident\n   associated with an entity id, or the ident itself if passed."}, entid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 250, :column 7, :end-line 250, :end-column 12, :arglists (quote ([db ident])), :doc "Returns a core.async channel that will contain the entity id\n   associated with a symbolic keyword, or the id itself if passed."}, :name datomic-cljs.api/entid, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 12, :method-params ([db ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db ident])), :doc "Returns a core.async channel that will contain the entity id\n   associated with a symbolic keyword, or the id itself if passed."}, tempid {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/byu/CS 360/Project0/dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :line 31, :column 9, :end-line 31, :end-column 15, :arglists (quote ([partition] [partition n])), :doc "Generate a tempid in the specified partition. Values of n from -1\n     to -1000000, inclusive, are reserved for user-created tempids.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([partition] [partition n]), :arglists ([partition] [partition n]), :arglists-meta (nil nil)}}, :name datomic-cljs.api/tempid, :variadic false, :file "dev-resources/public/js/compiled/out/datomic_cljs/api.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([partition] [partition n]), :arglists ([partition] [partition n]), :arglists-meta (nil nil)}, :method-params ([partition] [partition n]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists ([partition] [partition n]), :doc "Generate a tempid in the specified partition. Values of n from -1\n     to -1000000, inclusive, are reserved for user-created tempids."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, datomic-cljs.macros datomic-cljs.macros}, :cljs.analyzer/constants {:seen #{:args :find :q :since :get :where :limit :index conn :else :db-after :offset :db-name :implicit-qs :start :history :recur :hostname :basis-t :port :db-alias :e :db-before :tx-data implicit-qs :as-of :status $ :db/alias hostname db-alias :implicit-args :qs port :edn :post :db/ident spec ?ident :form :end :body implicit-args ?e :in :conn}, :order [spec :hostname :port :db-alias :post :edn :form :tx-data hostname port db-alias :conn :implicit-args :implicit-qs :get :qs :q :args :db/alias :index :e :as-of :since :recur :body :basis-t :else conn implicit-args implicit-qs :db-name :status :history :limit :offset :db-before :db-after :find ?e :in $ ?ident :where :db/ident :start :end]}, :doc nil}